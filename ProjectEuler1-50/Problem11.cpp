/*
Alex Kozak
February 26th 2018

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

*/

#include "Solutions.h"
#include "stdafx.h"
#include <iostream>
#include <fstream>
#include <string>
using namespace std;

int Problem11()
{
	int answer = 0;

	int x[400] = { 0 };
	int index = 0;
	string line;
	ifstream myfile("Problem11.txt");

	if (myfile.is_open())
	{
		while (getline(myfile, line))
		{
			for (int i = 0; i < (int)line.length(); i += 3)
			{
				x[index++] = (((int)line[i] - 48) * 10) + ((int)line[i+1] - 48);
			}
		}
		myfile.close();
	}

	int testBiggest = 0;	
	for (int i = 0; i <= 16; i++)
	{
		for (int j = 0; j < 400; j += 20)	// horizontal
		{
			testBiggest = x[i + j] * x[i + j + 1] * x[i + j + 2] * x[i + j + 3];
			if (testBiggest > answer)
			{
				answer = testBiggest;
			}
		}
		for (int j = 0; j < 320; j += 20)	// down-right
		{
			testBiggest = x[i + j] * x[i + j + 21] * x[i + j + 42] * x[i + j + 63];
			if (testBiggest > answer)
			{
				answer = testBiggest;
			}
		}
	}

	for (int i = 0; i <= 20; i++)
	{
		for (int j = 60; j < 400; j += 20)	// vertical
		{
			testBiggest = x[i + j] * x[i + j - 20] * x[i + j - 40] * x[i + j - 60];
			if (testBiggest > answer)
			{
				answer = testBiggest;
			}
		}
		for (int j = 380; j >= 60; j -= 20)	// up-right
		{
			testBiggest = x[i + j] * x[i + j - 19] * x[i + j - 38] * x[i + j - 57];
			if (testBiggest > answer)
			{
				answer = testBiggest;
			}
		}
	}

	return answer;
}